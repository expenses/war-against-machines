language: rust

# Test on linux/stable, linux/beta, linux/nightly and osx/stable
matrix:
  include:
    - os: linux
      rust: stable
    - os: linux
      rust: beta
    - os: linux
      rust: nightly
    - os: osx
      rust: stable

  allow_failures:
    - rust: nightly

# Cache packages
cache: cargo

# Use Trusty Ubuntu (14.04 LTS), not Precise (12.04 LTS)
dist: trusty

addons:
  apt:
    packages:
      # Addons for `kcov`
      - libcurl4-openssl-dev
      - libelf-dev
      - libdw-dev
      - cmake
      - gcc
      - binutils-dev
      - libiberty-dev
      # ALSA
      - libasound2-dev
      # Off-Screen shader testing
      - libosmesa6

# The script itself
script:
  - cargo build
  # Run cargo test but link the binary with unused code for accurate code coverage reports
  - RUSTFLAGS="-C link-dead-code" cargo test
  - if [ "$TRAVIS_RUST_VERSION" == "nightly" ]; then
      cargo install clippy && cargo clippy;
    fi

# `kcov` example, taken from 'https://github.com/codecov/example-rust'`
after_success:
  - if [ "$TRAVIS_OS_NAME" == "linux" ] && [ "$TRAVIS_RUST_VERSION" == "stable" ]; then
      wget https://github.com/SimonKagstrom/kcov/archive/master.tar.gz &&
      tar xzf master.tar.gz &&
      cd kcov-master &&
      mkdir build &&
      cd build &&
      cmake .. &&
      make &&
      make install DESTDIR=../../kcov-build &&
      cd ../.. &&
      rm -rf kcov-master &&
      for file in target/debug/war_against_machines-*[^\.d]; do
        mkdir -p "target/cov/$(basename $file)";
        ./kcov-build/usr/local/bin/kcov --exclude-pattern=/.cargo,/usr/lib --verify "target/cov/$(basename $file)" "$file";
      done &&
      bash <(curl -s https://codecov.io/bash) &&
      echo "Uploaded code coverage";
    fi

# Build and zip the release
before_deploy:
  - cargo build --release
  - mkdir staging
  - mv target/release/war-against-machines staging
  - mv LICENCE staging
  - cd staging
  - zip war-against-machines-$TRAVIS_TAG-$TRAVIS_OS_NAME.zip *

# And deploy it
deploy:
  # Deploy using Github Releases
  provider: releases
  # Use an encrypted api key
  api_key:
    secure: "diyX6CZzBqK8E1gvO41tbPrXzGBL1ATs5VNIa9UpvBUl90BEu3GXNP45p5xxGrqsU+T4psznd6B41dyk4yn99MmXdhusZvkfGx3UD8qIUCn+gPa+FS1JHTtVhLWt3GQU/
AMLl0rNTHTd7A/w9n2M7OSgQrXuB/hDtKHbC+v7QEunE9VCN8ZT3IpMxr4aF9MEEoTFHJBRsXTY4iJLNtKqtrOJFhUMfLf73Baxnkis+H8U4Wp1NDBHnmlmYmUeX+r4VjPPqr4zNgELb
lSrt+gAeyB8NWcJ9VxYddun0U8buVaI11s0OHWfJXmJq5EEMrP8XaloAMZnqekLrZtslmyvTh6yABysTHVPLGFDXHsF+7gsulH+qCA5jnWx6tno8qCRQ0nspR2yRLMMlXrtwP3Eswz/l
H0Ms5Wlx46v08CkvjA8RtHNXZxNzdMs7xJh+4TxCGFQai+GPBY59E48mqXpAgH6mify8bXAVoSvvuP9A4C7zmTHFU0jouWOwuF3e4vXEflN5wIOJeqy3oDXXh+CtNHze3nU2VxeIYYHU
bJbh2RZdOmDnWY9Xow+F+u0tbcrMSukhOexBg5aCWdMCAto3anh4AYlFerMnze3he8Vx9wKGHmOpspVOyGQLGaV+nmh5cuNcUy3X+9NOBy1zTDVrVC4DtP5h/2rDXnVOTPgCkU="
  # The file to upload
  file: $TRAVIS_BUILD_DIR/staging/war-against-machines-$TRAVIS_TAG-$TRAVIS_OS_NAME.zip
  # Don't clean up the directory
  skip_cleanup: true
  # Only deploy on tagged releases to the main repo
  on:
    repo: expenses/war-against-machines
    tags: true